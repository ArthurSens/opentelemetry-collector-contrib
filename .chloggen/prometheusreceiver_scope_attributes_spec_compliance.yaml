# Use this changelog template to create an entry for release notes.

# One of 'breaking', 'deprecation', 'new_component', 'enhancement', 'bug_fix'
change_type: enhancement

# The name of the component, or a single word describing the area of concern, (e.g. filelogreceiver)
component: prometheusreceiver

# A brief description of the change.  Surround your text with quotes ("") if it needs to start with a backtick (`).
note: "Implement scope attributes extraction from `otel_scope_` prefixed labels to comply with updated OpenTelemetry specification"

# Mandatory: One or more tracking issues related to the change. You can use the PR number here if no issue exists.
issues: [40060]

# (Optional) One or more lines of additional information to render under the primary note.
# These lines will be padded with 2 spaces and then inserted directly into the document.
# Use pipe (|) for multiline entries.
subtext: |
  The OpenTelemetry Prometheus specification has been updated to deprecate the `otel_scope_info` metric 
  in favor of embedding scope attributes directly in metrics using `otel_scope_` prefixed labels.
  This implementation always extracts scope attributes from `otel_scope_` prefixed labels on all metrics
  and always filters these labels from datapoint attributes, regardless of the feature gate setting.
  The feature gate `receiver.prometheusreceiver.RemoveScopeInfo` only controls `otel_scope_info` processing:
  - When disabled: `otel_scope_info` metrics are processed for scope attributes and merged with `otel_scope_` labels.
  - When enabled: `otel_scope_info` metrics are treated as regular metrics.
  This change maintains backward compatibility while enabling compliance with the updated specification.
  See: https://github.com/open-telemetry/opentelemetry-specification/pull/4505

# If your change doesn't affect end users or the exported elements of any package,
# you should instead start your pull request title with [chore] or use the "Skip Changelog" label.
# Optional: The change log or logs in which this entry should be included.
# e.g. '[user]' or '[user, api]'
# Include 'user' if the change is relevant to end users.
# Include 'api' if there is a change to a library API.
# Default: '[user]'
change_logs: [user]
